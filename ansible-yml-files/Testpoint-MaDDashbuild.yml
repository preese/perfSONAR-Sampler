---

- hosts: all
  become: yes
  tasks:
    - name: Install EPEL & PS repo to all VMs
      yum:
        name:
          - epel-release
          - http://software.internet2.edu/rpms/el7/x86_64/latest/packages/perfSONAR-repo-0.10-1.noarch.rpm
        state: present

- hosts: ps,dj
  gather_facts: False
  become: yes
  tasks:
    - name: For ps & dj VMs, add perfsonar rpms to all testpoint edge nodes
      yum:
        name:
          - perfsonar-testpoint
        state: present

    - name: For ps & dj VMs, install remote URL and archives, even before the .json is published, the testpoints will be ok
      command: 'psconfig remote  add --configure-archives "http://192.168.1.213/psconfig/mesh.json"'
     
    - name: For ps & dj VMs, restart psconfig-pscheduler-agent
      service:
        name: psconfig-pscheduler-agent
        state: restarted

- hosts: md
  gather_facts: False
  become: yes
  tasks:
    - name: For md VM and remaining lines, add perfsonar-centralmanagment rpm to MaDDash Server
      yum:
        name:
          - perfsonar-centralmanagement
        state: present

    - name: Start FW service if not running
      service:
        name: firewalld
        state: started

    - name: Enable FW service
      service:
        name: firewalld
        enabled: yes

    - name: Add http to firewall
      firewalld:
        service: http
        permanent: yes
        immediate: yes
        state: enabled

    - name: Add https to firewall
      firewalld:
        service: https
        permanent: yes
        immediate: yes
        state: enabled

    - name: Copy mesh.json file to Maddash node from Vagrant host
      copy:
        src: ../perfS-json-files/mesh.json
        dest: /home/vagrant/mesh.json
        owner: vagrant
        group: vagrant
     
    - name: Copy disjoint.json file to Maddash node from Vagrant host
      copy:
        src: ../perfS-json-files/disjoint.json
        dest: /home/vagrant/disjoint.json
        owner: vagrant
        group: vagrant
 
    - name: Publish mesh.json file (all the rest from the MaDDash Quick Install)
      command:  "psconfig publish /home/vagrant/mesh.json"

    - name: Add access to esmond for local net, EDIT if you used a different range!
      command:  "/usr/sbin/esmond_manage add_user_ip_address example-user1 192.168.1.0/24"

    - name: Remote add file, lets the archive know where the JSON config file lives
      command:  'psconfig remote add "http://192.168.1.213/psconfig/mesh.json"'

    - name: Add new project name for web site
      ansible.builtin.replace:
        path: /etc/maddash/maddash-webui/config.json
        regexp: '"My perfSONAR Dashboard"'
        replace: '"Example Maddash setup, with disjoint option"'

    - name: Add correct grid name, so it opens first
      ansible.builtin.replace:
        path: /etc/maddash/maddash-webui/config.json
        regexp: '"My Sites"'
        replace: '"1 PSproj"'

    - name: Enable cassandra
      service:
        name: cassandra
        enabled: yes

    - name: Start cassandra
      service:
        name: cassandra
        state: started

    - name: Restart maddash-server
      service:
        name: maddash-server
        state: restarted

    - name: Restart psconfig-maddash-agent
      service:
        name: psconfig-maddash-agent
        state: restarted

    - name: Restart httpd
      service:
        name: httpd
        state: restarted

    - name: Shorten test times, packet loss, every 5min
      command:  "psconfig maddash-grid edit --name default_loss --check-interval PT5M"

    - name: Shorten test time, throughput, every 2hr
      command: "psconfig maddash-grid edit --name default_throughput --check-interval PT2H"
    

